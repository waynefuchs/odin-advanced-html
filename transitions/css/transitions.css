:root {
  --duration: 5s;
  --delay: 0s;
  --step-hold: 0.25;
  --step-count: 5;

  --button-width: 200px;
  --button-height: 70px;
  --button-radius: 1rem;
}

@keyframes move-right {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(80vw - 100%));
  }
}

.start-and-end {
  border-left: 5px solid var(--c1-dark);
  border-right: 5px solid var(--c1-dark);
  width: 80vw;
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: start;
  gap: 0;
}

.box-small {
  width: 50px;
  height: 50px;

  background: var(--c2-light);
  border-radius: 1rem;
  color: var(--c1-dark);

  display: flex;
  flex-direction: column;
  justify-content: center;
}

.translate {
  animation: none var(--duration) infinite var(--direction, alternate)
    var(--ease-function, steps(var(--step-count), var(--jump-term)));
  animation-name: move-right;
}

.steps {
  background-color: var(--c1-dark);
}

#heading {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.individual {
  transition-property: font-size;
  transition-duration: 3s;
  transition-timing-function: linear;
  transition-delay: 1s;
}
.individual:hover {
  font-size: 2.5rem;
  color: var(--c1-light);
}

.ball {
  border-radius: 25px;
  width: 50px;
  height: 50px;
  background: #c00;
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 1s;
}

.multiple {
  /* transition: width 0.5s, height 2s, background-color 2s steps(5, end) !important; */
}
.multiple:hover {
  background-color: var(--c2-dark);
  width: 150px;
  height: 150px;
  rotate: 180deg;
}




/*
This is the backbone of this effect. There is an opacity "curtain" that sits
behind the button.
*/
.bg-curtain {
  transition: 1s background-color ease;
  background-color: #eee;
  opacity: 1;
  border-radius: var(--button-radius);
}
.bg-curtain:hover {
  background-color: rgba(255, 255, 255, 0);
}

/* 
The parent container is the container that has whatever content is
desired to be shown behind the opacity curtain.
*/
.bg-rainbow {
  background: linear-gradient(
    90deg,
    rgba(255, 0, 0, 1) 0%,
    rgba(255, 0, 0, 1) 14%,
    rgba(255, 134, 0, 1) 14%,
    rgba(255, 134, 0, 1) 28.5%,
    rgba(247, 255, 0, 1) 28.5%,
    rgba(247, 255, 0, 1) 42.85%,
    rgba(0, 255, 18, 1) 42.85%,
    rgba(0, 255, 18, 1) 57.14%,
    rgba(0, 73, 247, 1) 57.14%,
    rgba(0, 73, 247, 1) 71.42%,
    rgba(0, 1, 103, 1) 71.42%,
    rgba(0, 1, 103, 1) 85.71%,
    rgba(134, 0, 255, 1) 85.71%,
    rgba(134, 0, 255, 1) 100%
  );
  border-radius: var(--button-radius);
}

/* 
Finally: The button can be styled however you like, as long as "background-color"
is set to be transparent, so the rainbow and curtain can be seen behind.
*/
button {
  border-radius: var(--button-radius);
  font-size: 1rem;
  width: var(--button-width);
  height: var(--button-height);
  background-color: transparent;
  transition: 250ms font-size;
}
button:hover {
  font-weight: bold;
  font-size: 2rem;
  color: #fff;
  text-shadow: #000 0 0 5px;
}


/* Using CSS variables to modify jump term or easing function */
#steps-jump-start {
  --jump-term: jump-start;
}

#steps-jump-end {
  --jump-term: jump-end;
}

#steps-jump-none {
  --jump-term: jump-none;
}

#steps-jump-both {
  --jump-term: jump-both;
}

#steps-start {
  --jump-term: start;
}

#steps-end {
  --jump-term: end;
}

#linear {
  --ease-function: linear;
}

#ease {
  --ease-function: ease;
}

#ease-in {
  --ease-function: ease-in;
}

#ease-out {
  --ease-function: ease-out;
}

#ease-in-out {
  --ease-function: ease-in-out;
}

#cubic-bezier {
  --ease-function: cubic-bezier(0.25, -0.25, 0.75, 1.25);
}
