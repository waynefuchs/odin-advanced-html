/* Style */
@font-face {
  font-family: Nunito;
  src: url(../fonts/Nunito/Nunito-VariableFont_wght.ttf);
}

@font-face {
  font-family: ScopeOne;
  src: url(../fonts/Scope_One/ScopeOne-Regular.ttf);
}

:root {
  --c-dark: #070d0c;
  --c1-dark: #2a403a;
  --c1-light: #5d8c56;
  --c2-dark: #8c4a23;
  --c2-light: #f26835;
}

body {
  font: 2rem "ScopeOne", serif;
  background: var(--c-dark);
  color: var(--c1-light);
  padding: 50px;
}

p {
  margin: 0;
}

/* General Attributes */
.box {
  width: 250px;
  height: 250px;
  background: var(--c2-light);
  border-radius: 2rem;
  color: var(--c1-dark);
  transition: all 0.75s ease;
}

.camera {
  /* perspective: 600px; */
  perspective: 37.5rem; /* Assuming 1rem = 16px; <-- 600px */
  /* perspective-origin: top left; */
  /* transform-style: preserve-3d; */
}

.center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.marktop {
  border-top: 2rem solid var(--c2-dark);
}

.example-container {
  display: flex;
  flex-direction: row;
  gap: 4rem;
}

/* ROTATE */
.rotate-by-deg:hover {
  transform: rotateX(45deg);
}
.rotate-by-rad:hover {
  transform: rotateY(-1rad);
}
.rotate-by-turn:hover {
  transform: rotate(0.5turn);
}
.rotate-z {
  transform: rotateZ(45deg);
}
.rotate-z:hover {
  transform: rotateZ(90deg);
}
.rotate3d {
  transform: rotate3d(0, 0, 0, 0deg);
}
.rotate3d:hover {
  transform: rotate3d(1, 1, -1, 180deg);
}

/* SCALE */
.scale-x:hover {
  transform: scaleX(0.5);
}
.scale-y:hover {
  transform: scaleY(0.5);
}
.scale:hover {
  transform: scale(0.5);
}
.scale-reference {
  transform: rotate3d(1, 1, 1, 45deg);
}
.scale-z {
  transform: scaleZ(2) rotate3d(1, 1, 1, 45deg);
}
.scale-z:hover {
  transform: scaleZ(-200%) rotate3d(1, 1, 1, 45deg);
}
.scale3d {
  transform: scale3d(1.3, 1, 1) rotate3d(1, 1, 1, 45deg);
}
.scale3d:hover {
  /* (x,y,z) */
  transform: scale3d(2, 2, -2) rotate3d(1, 1, 1, 45deg);
}
/* transform: scaleZ(0.45); */
/* transform: perspective(800px) scale3d(1, 1, 0.25); */
/* transform: translateZ(-100px); */

/* EXAMPLE: Skew */
.skew-x:hover {
  transform: skewX(45deg);
}
.skew-y:hover {
  transform: skewY(-0.5rad);
}
.skew:hover {
  transform: skew(45deg, -0.5rad);
}

/* EXAMPLE: Translate */
.translate-x:hover {
  transform: translateX(100px);
}
.translate-y:hover {
  transform: translateY(-33%);
}
.translate:hover {
  transform: translate(2rem, 5vh);
}

/* Example: Chaining Transforms */
.chain1:hover {
  transform: skewX(15deg) skewY(15deg);
}

.chain2:hover {
  transform: rotate(15deg) scale(1.2) translate(50px, 50px);
}

.chain3:hover {
  transform: translate(200%) rotate(45deg);
}
